name: plots-tests
description: 'Plots tests'

inputs:
  version:
    description: 'Julia version'
    default: '1'
  os:
    description: 'OS'
    default: 'ubuntu-latest'
  prefix:
    description: 'julia command prefix'
    default: ''

runs:
  using: 'composite'
  steps:
    - uses: julia-actions/setup-julia@latest
      with:
        version: ${{ inputs.version }}
    - uses: julia-actions/cache@v1

    - name: Ubuntu LaTeX dependencies
      if: startsWith(inputs.os, 'ubuntu')
      shell: bash
      run: |
        sudo apt-get -y update
        sudo apt-get -y install gnuplot poppler-utils texlive-{latex-base,latex-extra,luatex}
        sudo fc-cache -vr

    - uses: julia-actions/julia-buildpkg@latest

    - name: PyPlot dependencies
      shell: julia --project=@. --color=yes {0}
      run: |
        @show ENV["PYTHON"]
        using Pkg
        Pkg.add("Conda"); Pkg.build("Conda"; verbose=true)
        Pkg.add("PyCall"); Pkg.build("PyCall"; verbose=true)
        using Conda; Conda.add("matplotlib")
        Conda.list()

    - uses: julia-actions/julia-runtest@latest
      with:
        prefix: ${{ inputs.prefix }}  # for `xvfb-run`

    - name: Run downstream tests
      if: startsWith(inputs.os, 'ubuntu')
      shell: bash
      run:  |
        xvfb-run julia -e 'using Pkg; Pkg.activate(tempdir()); Pkg.develop(path=abspath(".")); Pkg.add("StatsPlots"); Pkg.test("StatsPlots")'
        xvfb-run julia -e 'using Pkg; Pkg.activate(tempdir()); Pkg.develop(path=abspath(".")); Pkg.add("GraphRecipes"); Pkg.test("GraphRecipes")'

    - uses: julia-actions/julia-processcoverage@latest
      if: startsWith(inputs.os, 'ubuntu')
    - uses: codecov/codecov-action@v3
      if: startsWith(inputs.os, 'ubuntu')
      with:
        file: lcov.info
