name: ci

on:
  push:
    branches: [master]
  pull_request:

concurrency: 
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  ci:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    env:
      GKS_ENCODING: "utf8"
      GKSwstype: "nul"
      PYTHON: "Conda"  # for `PyPlot`
    name: Julia ${{ matrix.version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.version == 'nightly' }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6' # LTS (minimal declared julia compat in `Project.toml`)
          - '1.8' # latest stable
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64]
        include:
          - os: ubuntu-latest
            prefix: xvfb-run  # julia-actions/julia-runtest/blob/master/README.md
          - os: ubuntu-latest
            prefix: xvfb-run
            version: '1.7'  # only test intermediate relase on `ubuntu`
          # - os: ubuntu-latest
          #   prefix: xvfb-run
          #   version: 'nightly'

    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.version }}
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@latest

      - name: Test upstream RecipesBase & RecipesPipeline
        shell: julia --project=@. --color=yes {0}
        run: |
          using Pkg
          foreach(("RecipesBase", "RecipesPipeline")) do name
            Pkg.develop(path=name); Pkg.test(name; coverage=true)
          end

      - name: PyPlot dependencies
        shell: julia --project=@. --color=yes {0}
        run: |
          @show ENV["PYTHON"]
          using Pkg
          Pkg.add("Conda"); Pkg.build("Conda"; verbose=true)
          using Conda; env, rc = Conda.ROOTENV, Conda.conda_rc(Conda.ROOTENV)
          Conda.runconda(`config --set auto_update_conda False --file $rc --force`, env)
          Pkg.add("PyCall"); Pkg.build("PyCall"; verbose=true)
          Conda.add("matplotlib")
          Conda.list()

      - name: Ubuntu LaTeX dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get -y update
          sudo apt-get -y install gnuplot poppler-utils texlive-{latex-base,latex-extra,luatex}
          sudo fc-cache -vr

      - uses: julia-actions/julia-runtest@latest
        with:
          prefix: ${{ matrix.prefix }}  # for `xvfb-run`

      - name: Run downstream tests
        if: startsWith(matrix.os, 'ubuntu')
        shell: xvfb-run julia --project=@. --color=yes {0}
        run: |
          using Pkg
          foreach(("StatsPlots", "GraphRecipes")) do name
            Pkg.activate(tempdir())
            foreach(path -> Pkg.develop(; path), ("RecipesBase", "RecipesPipeline", "."))
            Pkg.add(name); Pkg.test(name; coverage=true)
          end

      - uses: julia-actions/julia-processcoverage@latest
        if: startsWith(matrix.os, 'ubuntu')
        with:
          directories: RecipesBase/src,RecipesPipeline/src,src
      - uses: codecov/codecov-action@v3
        if: startsWith(matrix.os, 'ubuntu')
        with:
          file: lcov.info

  Skip:
    if: contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ubuntu-latest
    steps:
      - name: Skip CI ðŸš«
        run: echo skip ci
