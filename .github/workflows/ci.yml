name: ci

on:
  push:
    branches:
      - master
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  CI:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    env:
      GKS_ENCODING: "utf8"
      GKSwstype: "nul"
      PYTHON: "Conda"  # for `PyPlot`

    name: Julia ${{ matrix.version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.version == 'nightly' }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6' # LTS
          - '1.8' # latest stable
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        arch:
          - x64
          # - x86
        include:
          # - version: 'nightly'
          - version: '1.7'
            os: ubuntu-latest

    steps:
      # Setup environment
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.version }}
      - uses: julia-actions/cache@v1

      # TESTCMD
      - name: Default TESTCMD
        run: echo "TESTCMD=julia" >> $GITHUB_ENV
      - name: Ubuntu TESTCMD
        if: startsWith(matrix.os,'ubuntu')
        run: |
          echo "TESTCMD=xvfb-run --auto-servernum julia --color=yes" >> $GITHUB_ENV
          sudo apt-get -y update
          sudo apt-get -y install gnuplot poppler-utils texlive-{latex-base,latex-extra,luatex}
          sudo fc-cache -vr

      # Julia Dependencies
      - name: Install Julia dependencies
        uses: julia-actions/julia-buildpkg@latest

      - name: Build test dependencies
        run: |
          unset CONDA
          $TESTCMD --project=@. -e '
            @show ENV["PYTHON"]
            using Pkg; Pkg.status(); Pkg.status(; mode=Pkg.PKGMODE_MANIFEST)
            Pkg.add("Conda"); Pkg.build("Conda"; verbose=true)
            Pkg.add("PyCall"); Pkg.build("PyCall"; verbose=true)
            Pkg.add("PyPlot"); Pkg.build("PyPlot"; verbose=true)
          '

      # Run tests
      - name: Run Graphical tests
        uses: julia-actions/julia-runtest@latest

      - name: Run downstream tests
        run:  |
          $TESTCMD -e 'using Pkg; Pkg.activate(tempdir()); Pkg.develop(path=abspath(".")); Pkg.add("StatsPlots"); Pkg.test("StatsPlots")'
          $TESTCMD -e 'using Pkg; Pkg.activate(tempdir()); Pkg.develop(path=abspath(".")); Pkg.add("GraphRecipes"); Pkg.test("GraphRecipes")'

      # Codecov
      - uses: julia-actions/julia-processcoverage@latest
        if: startsWith(matrix.os,'ubuntu')
      - uses: codecov/codecov-action@v3
        if: startsWith(matrix.os,'ubuntu')
        with:
          file: lcov.info

  Skip:
    if: "contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Skip CI ðŸš«
        run: echo skip ci
